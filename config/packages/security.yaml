security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:

        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall para /api/register (público)
        register:
            pattern: ^/api/register
            stateless: true
           # security: false

        # Firewall para /api/login (público)
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: App\Security\JWTAuthenticationSuccessHandler
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginAuthenticator
            logout:
                path: app_logout


    access_control:
        # accesos publicos
        - { path: ^/api/register, roles: IS_ANONIMOUS } # registro
        - { path: ^/api/login, roles: IS_ANONIMOUS } # login
        - { path: ^/api/main, roles: IS_ANONIMOUS } # Info de la API

        # accesos privados
        - { path: ^/api/ roles: IS_AUTHENTICATED_FULLY }
        
    
    

    # when@test:
    #     security:
    #         password_hashers:
    #             Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 
    #             algorithm: auto
    #             cost: 4 # Lowest possible value for bcrypt
    #             time_cost: 3 # Lowest possible value for argon
    #             memory_cost: 10 # Lowest possible value for argon


